{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClear","handleCopy","text1","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","aboutText","Alert","alert","class","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.265f503d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\");\r\n  };\r\n  const handleClear = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"CLEARED\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let text1 = document.getElementById(\"myBox\");\r\n    text1.select();\r\n    navigator.clipboard.writeText(text1.value);\r\n    props.showAlert(\"Copied to clipboard\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"Handle on change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            rows=\"4\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClear}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"contanier my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the textboxto preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        class={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark m ode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  //Toggle Dark Mode\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Text\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\" mode={mode}>\n        {/* <Routes>\n            <Route exact path=\"/about\" element={<About />} />\n          </Routes>\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={ */}\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Enter the text to analyze below\"\n          mode={mode}\n        />\n        {/* //     }\n          //   />\n          // </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}